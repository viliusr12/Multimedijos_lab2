!function(e){function t(r){if(n[r])return n[r].exports;var a=n[r]={exports:{},id:r,loaded:!1};return e[r].call(a.exports,a,a.exports,t),a.loaded=!0,a.exports}var n={};return t.m=e,t.c=n,t.p="",t(0)}([function(e,t,n){if(n(1),"undefined"==typeof AFRAME)throw new Error("Component attempted to register before AFRAME was available.");AFRAME.registerComponent("pointcloud",{schema:{src:{type:"asset"},texture:{type:"asset"},size:{type:"number",default:1},opacity:{type:"number",default:1},depthWrite:{type:"boolean",default:!0}},multiple:!1,init:function(){if(!this.data.src)return void console.warn("HOW I'M SUPOSSED TO LOAD A POINT CLOUD WITHOUT [%s] `src` DEFINED",this.name);const e=new THREE.PLYLoader,t=this;e.load(this.data.src,function(e){var n;if(t.data.texture){const r=(new THREE.TextureLoader).load(t.data.texture);n=new THREE.PointsMaterial({size:t.data.size,vertexColors:THREE.VertexColors,map:r,transparent:!0,opacity:t.data.opacity,depthWrite:t.data.depthWrite})}else n=new THREE.PointsMaterial({size:t.data.size,vertexColors:THREE.VertexColors,transparent:!0,opacity:t.data.opacity});t.pointcloud=new THREE.Points(e,n),t.el.setObject3D("pointcloud",t.pointcloud)})},remove:function(){}}),AFRAME.registerPrimitive("a-pointcloud",{defaultComponents:{pointcloud:{}},mappings:{src:"pointcloud.src",texture:"pointcloud.texture",size:"pointcloud.size",opacity:"pointcloud.opacity",depthWrite:"pointcloud.depthWrite"}})},function(e,t){THREE.PLYLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager,this.propertyNameMapping={}},THREE.PLYLoader.prototype={constructor:THREE.PLYLoader,load:function(e,t,n,r){var a=this,i=new THREE.FileLoader(this.manager);i.setResponseType("arraybuffer"),i.load(e,function(e){t(a.parse(e))},n,r)},setPropertyNameMapping:function(e){this.propertyNameMapping=e},parse:function(e){function t(e){var t=r(n(e));return"ascii"===t.format}function n(e){for(var t=new Uint8Array(e),n="",r=0;r<e.byteLength;r++)n+=String.fromCharCode(t[r]);return n}function r(e){function t(e,t){var n={type:e[0]};return"list"===n.type?(n.name=e[3],n.countType=e[1],n.itemType=e[2]):n.name=e[1],n.name in t&&(n.name=t[n.name]),n}var n=/ply([\s\S]*)end_header\s/,r="",a=0,i=n.exec(e);null!==i&&(r=i[1],a=i[0].length);for(var s,o,u,c={comments:[],elements:[],headerLength:a},l=r.split("\n"),p=0;p<l.length;p++){var d=l[p];if(d=d.trim(),""!==d)switch(u=d.split(/\s+/),o=u.shift(),d=u.join(" "),o){case"format":c.format=u[0],c.version=u[1];break;case"comment":c.comments.push(d);break;case"element":void 0!==s&&c.elements.push(s),s={},s.name=u[0],s.count=parseInt(u[1]),s.properties=[];break;case"property":s.properties.push(t(u,f.propertyNameMapping));break;default:console.log("unhandled",o,u)}}return void 0!==s&&c.elements.push(s),c}function a(e,t){switch(t){case"char":case"uchar":case"short":case"ushort":case"int":case"uint":case"int8":case"uint8":case"int16":case"uint16":case"int32":case"uint32":return parseInt(e);case"float":case"double":case"float32":case"float64":return parseFloat(e)}}function i(e,t){for(var n=t.split(/\s+/),r={},i=0;i<e.length;i++)if("list"===e[i].type){for(var s=[],o=a(n.shift(),e[i].countType),u=0;u<o;u++)s.push(a(n.shift(),e[i].itemType));r[e[i].name]=s}else r[e[i].name]=a(n.shift(),e[i].type);return r}function s(e){var t,n={indices:[],vertices:[],normals:[],uvs:[],colors:[]},a=r(e),s=/end_header\s([\s\S]*)$/,c="";null!==(t=s.exec(e))&&(c=t[1]);for(var l=c.split("\n"),p=0,d=0,f=0;f<l.length;f++){var h=l[f];if(h=h.trim(),""!==h){d>=a.elements[p].count&&(p++,d=0);var m=i(a.elements[p].properties,h);u(n,a.elements[p].name,m),d++}}return o(n)}function o(e){var t=new THREE.BufferGeometry;return e.indices.length>0&&t.setIndex(e.indices),t.addAttribute("position",new THREE.Float32BufferAttribute(e.vertices,3)),e.normals.length>0&&t.addAttribute("normal",new THREE.Float32BufferAttribute(e.normals,3)),e.uvs.length>0&&t.addAttribute("uv",new THREE.Float32BufferAttribute(e.uvs,2)),e.colors.length>0&&t.addAttribute("color",new THREE.Float32BufferAttribute(e.colors,3)),t.computeBoundingSphere(),t}function u(e,t,n){if("vertex"===t)e.vertices.push(n.x,n.y,n.z),"nx"in n&&"ny"in n&&"nz"in n&&e.normals.push(n.nx,n.ny,n.nz),"s"in n&&"t"in n&&e.uvs.push(n.s,n.t),"red"in n&&"green"in n&&"blue"in n&&e.colors.push(n.red/255,n.green/255,n.blue/255);else if("face"===t){var r=n.vertex_indices||n.vertex_index;3===r.length?e.indices.push(r[0],r[1],r[2]):4===r.length&&(e.indices.push(r[0],r[1],r[3]),e.indices.push(r[1],r[2],r[3]))}}function c(e,t,n,r){switch(n){case"int8":case"char":return[e.getInt8(t),1];case"uint8":case"uchar":return[e.getUint8(t),1];case"int16":case"short":return[e.getInt16(t,r),2];case"uint16":case"ushort":return[e.getUint16(t,r),2];case"int32":case"int":return[e.getInt32(t,r),4];case"uint32":case"uint":return[e.getUint32(t,r),4];case"float32":case"float":return[e.getFloat32(t,r),4];case"float64":case"double":return[e.getFloat64(t,r),8]}}function l(e,t,n,r){for(var a,i={},s=0,o=0;o<n.length;o++)if("list"===n[o].type){var u=[];a=c(e,t+s,n[o].countType,r);var l=a[0];s+=a[1];for(var p=0;p<l;p++)a=c(e,t+s,n[o].itemType,r),u.push(a[0]),s+=a[1];i[n[o].name]=u}else a=c(e,t+s,n[o].type,r),i[n[o].name]=a[0],s+=a[1];return[i,s]}function p(e){for(var t,a={indices:[],vertices:[],normals:[],uvs:[],colors:[]},i=r(n(e)),s="binary_little_endian"===i.format,c=new DataView(e,i.headerLength),p=0,d=0;d<i.elements.length;d++)for(var f=0;f<i.elements[d].count;f++){t=l(c,p,i.elements[d].properties,s),p+=t[1];var h=t[0];u(a,i.elements[d].name,h)}return o(a)}var d,f=this;return d=e instanceof ArrayBuffer?t(e)?s(n(e)):p(e):s(e)}}}]);